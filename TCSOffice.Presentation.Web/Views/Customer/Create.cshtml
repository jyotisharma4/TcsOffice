@model TCSOffice.Business.Domain.Dto.CustomerDto

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header position-relative">
    <h2>Customer</h2>
</div>
<div class="row-fluid">
    <div class="form-horizontal">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="control-group" style="margin-left: 100px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10 controls">
                    @Html.TextBoxFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ContributionNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        @Html.TextBoxFor(model => model.ContributionNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContributionNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.StartCreditPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        <div class="row-fluid input-append">
                            @Html.TextBoxFor(model => model.StartCreditPeriod, htmlAttributes : new {@class = "date-picker", @id = "id-startcreditperiod-date-picker" })
                            @Html.ValidationMessageFor(model => model.StartCreditPeriod, "", new { @class = "text-danger" })
                            <span class="add-on">
                                <i class="icon-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.EndCreditPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        <div class="row-fluid input-append">
                            @Html.TextBoxFor(model => model.EndCreditPeriod, htmlAttributes: new { @class = "date-picker", @id = "id-endcreditperiod-date-picker" })
                            @Html.ValidationMessageFor(model => model.EndCreditPeriod, "", new { @class = "text-danger" })
                            <span class="add-on">
                                <i class="icon-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        @Html.TextBoxFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10 controls">
                        @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        @Html.TextBoxFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DGEApproved, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        @Html.CheckBoxFor(model => model.DGEApproved, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DGEApproved, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="margin-top:15px">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-10 controls">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div style="margin-top:15px">
                    <div class="col-md-10" style="margin-left: 240px;">
                        <button type="submit" value="Create" class="btn btn-info">
                            <i class="icon-ok bigger-110"></i>
                            Create
                        </button>
                        &nbsp;&nbsp;&nbsp;
                        <button class="btn btn-danger" type="button" onclick="location.href='@Url.Action("Index", "Customer")'">
                            <i class="icon-reply icon-only"></i>
                            Back to List
                        </button>

                    </div>
                </div>
            </div>
        }
    </div>
</div>

